""" ● Распаковка коллекции
Рассмотрим другие варианты упаковки и распаковки значений. """

""" a, b, c = input("Три символа: ") """
""" print(f'{a=} {b=} {c=}') """

""" Аналогичным образом можно распаковать кортеж из трёх элементов в три
переменные. Со списком list, множеством set и прочими коллекциями будет
работать аналогично. """

a, b, c = ("один", "два", "три",)
print(f'{a=} {b=} {c=}')

""" a, b, c = {"один", "два", "три", "четыре", "пять"} """
""" print(f'{a=} {b=} {c=}') """  # ValueError: too many values to unpack (expected 3)


""" Распаковка коллекции с упаковкой “лишнего”, упаковка со звёздочкой
Для упаковки может применяться символ “звёздочка” перед именем переменной.
Такая переменная превратиться в список и соберёт в себя все значения, не
поместившиеся в остальные переменные. """

data = ["один", "два", "три", "четыре", "пять", "шесть", "семь",
]
a, b, c, *d = data
print(f'{a=} {b=} {c=} {d=}')
a, b, *c, d = data
print(f'{a=} {b=} {c=} {d=}')
a, *b, c, d = data
print(f'{a=} {b=} {c=} {d=}')
*a, b, c, d = data
print(f'{a=} {b=} {c=} {d=}')