""" Рассмотрим базовые операции по работе с файлами как с отдельными объектами.

● Переименование файлов
Переименование файла подразумевает сохранение неизменным файла в файловой
таблице и в содержимом файла, но изменение его имени. Для переименования
можно воспользоваться следующим кодом. """


import os
from pathlib import Path


#Необходимо создать  с названиями old_name.py , old_file.py
os.rename('HW7_files/LEC/old_name.py', 'HW7_files/LEC/new_name.py')

p = Path('HW7_files/LEC/old_file.py')
p.rename('HW7_files/LEC/new_file.py')

Path('HW7_files/LEC/new_file.py').rename('HW7_files/LEC/newest_file.py')


""" Функция rename принимает на вход два обязательных аргумента — исходное имя
файла и новое имя. Важно чтобы файл существовал, а новое имя не было занято.
Модуль pathlib позволяет сделать переименование через создание экземпляра
класса Path с указанием исходного файла. А затем вызов метода rename задаёт
новое имя. При этом операции могут быть объединены в одну строку через
точечную нотацию и без явного сохранения экземпляра класса в переменной. """


""" Перемещение файлов
Перемещение файла подразумевает изменение его позиции в каталоге файловой
системы. В процессе перемещения файл может быть переименован. """


os.replace('HW7_files/LEC/newest_file.py', os.path.join(os.getcwd(), 'dir', 'HW7_files/LEC/new_name.py'))
old_file = Path('HW7_files/LEC/new_name.py')
new_file = old_file.replace(Path.cwd() / 'HW7_files/LEC/new_os_dir' / old_file)


""" Для исходного файла явно не указывали директорию, где он расположен. При
переносе была указана текущая директория как отправная точка. Оба варианта
имеют одинаковый эффект.


Также при работе через os мы присвоили файлу новое имя. А при использовании
модуля pathlib указали, что после переноса файл должен сохранить старое имя. """



""" ● Копирование файлов
Для копирования файлов лучше всего подходит модуль shutil, который
предоставляет ряд высокоуровневых операций. """


import shutil


shutil.copy('one.txt', 'dir')
shutil.copy2('two.txt', 'dir')


""" Функции copy и copy2 работают схожим образом. Они принимают файл для
копирования и целевой каталог. Если такого каталога не существует, функция
попытается присвоить копируемому файлу имя “цели”.
Отличие состоит в том, что функция copy2 помимо содержимого файла пытается
скопировать и связанные с ним метаданные.
Если стоит задача скопировать каталог со всем его содержимым в новое место,
модуль предоставляет функции copytree. """


shutil.copytree('dir', 'one_more_dir')


""" Функция copytree рекурсивно обходит указанный каталог и копирует его
содержимое в новое место. """


""" ● Удаление файлов
Вариант удаления всего каталога целиком с содержимым мы уже рассматривали
сегодня. """


shutil.rmtree('dir')


""" Если же необходимо удалить один файл, можно воспользоваться следующими
вариантами """


os.remove('one_more_dir/one.txt')
Path('one_more_dir/one_more.txt').unlink()


""" И функция remove и метод unlink пытаются удалить файл по указанному пути. """